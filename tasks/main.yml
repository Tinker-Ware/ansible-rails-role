---
- apt:
    name: "{{ item }}"
    state: present
  with_items:
    - ruby-full
    - git-core
    - curl
    - zlib1g-dev
    - build-essential
    - libpq-dev
    - libreadline-dev
    - libyaml-dev
    - libsqlite3-dev
    - sqlite3
    - libxml2-dev
    - libxslt1-dev
    - libcurl4-openssl-dev
    - python-software-properties
    - libffi-dev
    - nodejs
    - libpq-dev
  sudo: yes

- name: download specified ruby version
  get_url:
    url: "http://ftp.ruby-lang.org/pub/ruby/{{ rails_ruby_version |  }}/ruby-{{ rails_ruby_version }}.tar.gz"
    dest: "{{ rails_ruby_version_download_path }}"
    mode: 0644
    owner: "{{ rails_owner_name }}"
    group: "{{ rails_group_name }}"
  sudo: yes
  sudo_user: "{{ rails_server_user }}"

- name: unpack new ruby version
  unarchive:
    src: "{{ rails_ruby_version_download_path }}"
    dest: "{{ rails_home_path }}"
  sudo: yes
  sudo_user: "{{ rails_server_user }}"

- name: install new ruby version
  command: ./configure
  args:
    chdir: "/home/vagrant/ruby-{{ rails_ruby_version }}"

- make:
    chdir: "/home/vagrant/ruby-{{ rails_ruby_version }}"

- name: Install new ruby version
  make:
    chdir: "/home/vagrant/ruby-{{ rails_ruby_version }}"
    target: install
  sudo: yes
  sudo_user: "{{ rails_server_user }}"

- name: install bundler
  command: gem install bundler
  sudo: yes

- name: install rails
  command: "gem install rails -v {{ rails_rails_version }}"
  sudo: yes

- name: clone repo
  git:
    repo: "{{ rails_git_repo }}"
    dest: "{{ rails_repo_dest_path }}"

- name: remove rubyversion from Gemfiles
  lineinfile:
    dest: ""{{ rails_gemfile_path }}""
    regexp: "ruby '.*'"
    line: 'ruby "{{ rails_ruby_version }}"'
    backup: no

- name: Get dependencies for repo.
  command: bundle install
  args:
    chdir: "{{ rails_repo_dest_path }}"

- name: Start aplication
  shell: "nohup rails server --binding={{ rails_binding_num }} --port={{ rails_port_num }} >> /tmp/rails.log 2>&1 &"
  args:
    chdir: "{{ rails_repo_dest_path }}"
